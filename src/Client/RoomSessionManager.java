package Client;

import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

public class RoomSessionManager {
    // Danh s√°ch user ƒëang tham gia ph√≤ng (user|roomID)
    private static final Set<String> activeUserRoomPairs = ConcurrentHashMap.newKeySet();

    // Qu·∫£n l√Ω t√¨nh tr·∫°ng s·ª≠ d·ª•ng camera
    private static final ConcurrentHashMap<String, Boolean> webcamInUse = new ConcurrentHashMap<>();

    private static String key(String userId, String roomCode) {
        return userId + "|" + roomCode;
    }

    /** 
     * Ki·ªÉm tra xem user c√≥ ƒëang ·ªü c√πng ph√≤ng n√†y kh√¥ng 
     */
    public static boolean isUserAlreadyInRoom(String userId, String roomCode) {
        return activeUserRoomPairs.contains(key(userId, roomCode));
    }

    /**
     * ƒêƒÉng k√Ω user tham gia ph√≤ng
     * @return true n·∫øu th√†nh c√¥ng, false n·∫øu ƒë√£ ·ªü ph√≤ng n√†y r·ªìi
     */
    public static boolean registerUserToRoom(String userId, String roomCode) {
        return activeUserRoomPairs.add(key(userId, roomCode));
    }

    /**
     * G·ª° user kh·ªèi ph√≤ng (khi r·ªùi ph√≤ng ho·∫∑c t·∫Øt ph√≤ng)
     */
    public static void removeUserFromRoom(String userId, String roomCode) {
        activeUserRoomPairs.remove(key(userId, roomCode));
    }

    // --- Qu·∫£n l√Ω Webcam ---
    public static synchronized boolean lockWebcam(String deviceName) {
        boolean inUse = webcamInUse.getOrDefault(deviceName, false);
        System.out.println("üîí Try lock " + deviceName + " -> inUse=" + inUse);
        if (inUse) return false;
        webcamInUse.put(deviceName, true);
        return true;
    }

    public static synchronized void releaseWebcam(String deviceName) {
        System.out.println("üßπ Releasing webcam lock for " + deviceName);
        webcamInUse.put(deviceName, false);
    }
    public static synchronized void resetWebcamState() {
        webcamInUse.put("device0", false);
    }
    public static synchronized boolean isWebcamLocked(String deviceName) {
        return webcamInUse.getOrDefault(deviceName, false);
    }

}
